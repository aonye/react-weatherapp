{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/react-weatherapp/src/components/mainview.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { getWeather } from './weather';\nimport { makeWidget } from './model';\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const citySearchRef = useRef();\n  const widgetRef = useRef();\n  const [weather, setWeather] = useState('');\n\n  function printElement(e) {\n    e.preventDefault();\n    const input = e.target.firstChild.value;\n    const childNodes = widgetRef.current.childNodes;\n    let output = {};\n    const re = new RegExp(`${input}`, 'g');\n    childNodes.forEach(node => {\n      if (node.classList.value.search(re) !== -1) {\n        output = { ...output,\n          [node.classList.value]: node.lastChild.textContent\n        };\n      }\n    });\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(output));\n    const dlAnchorElem = document.getElementById('downloadAnchorElem');\n    dlAnchorElem.setAttribute(\"href\", dataStr);\n    dlAnchorElem.setAttribute(\"download\", \"data.json\");\n    dlAnchorElem.click();\n  }\n\n  function filterElem(e) {\n    if (!widgetRef.current) {\n      return;\n    }\n\n    const childNodes = widgetRef.current.childNodes;\n\n    if (e.target.value === '') {\n      //no search query\n      childNodes.forEach(node => {\n        node.style.display = 'block';\n      });\n    } else {\n      const re = new RegExp(`${e.target.value}`, 'g');\n      childNodes.forEach(node => {\n        if (node.classList.value.search(re) !== -1) {\n          node.style.display = 'block';\n        } else {\n          node.style.display = 'none';\n        }\n      });\n    }\n  }\n\n  function callAPI(e) {\n    e.preventDefault();\n    const city = citySearchRef.current.value;\n    let promise = getWeather(city);\n    promise.then((result, error) => {\n      if (error) {\n        throw new Error();\n      }\n\n      const widget = makeWidget(result, widgetRef);\n      setWeather(widget);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: \"Nav goes here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => callAPI(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"citysearch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: citySearchRef,\n        type: \"text\",\n        id: \"citysearch\",\n        name: \"citysearch\",\n        placeholder: \"Enter a City to Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), weather, /*#__PURE__*/_jsxDEV(\"form\", {\n      onChange: e => filterElem(e),\n      onSubmit: e => printElement(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Type to filter, submit to save`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        id: \"downloadAnchorElem\",\n        style: {\n          'display': 'none'\n        },\n        children: ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"/QjpvM8qT+989Yc1hmO9ujNfqjE=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/react-weatherapp/src/components/mainview.js"],"names":["useRef","useState","getWeather","makeWidget","Main","citySearchRef","widgetRef","weather","setWeather","printElement","e","preventDefault","input","target","firstChild","value","childNodes","current","output","re","RegExp","forEach","node","classList","search","lastChild","textContent","dataStr","encodeURIComponent","JSON","stringify","dlAnchorElem","document","getElementById","setAttribute","click","filterElem","style","display","callAPI","city","promise","then","result","error","Error","widget"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react'\nimport { getWeather } from './weather';\nimport { makeWidget } from './model';\nimport '../styles/styles.css';\n\nconst Main = () => {\n    const citySearchRef = useRef();\n    const widgetRef = useRef();\n    const [weather, setWeather] = useState('');\n\n    function printElement(e) {\n        e.preventDefault();\n        const input = e.target.firstChild.value;\n        const childNodes = widgetRef.current.childNodes;\n        let output = {};\n        const re = new RegExp(`${input}`, 'g');\n        childNodes.forEach((node) => {\n            if (node.classList.value.search(re) !== -1) {\n                output = { ...output, [node.classList.value]: node.lastChild.textContent };\n            }\n        });\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(output));\n        const dlAnchorElem = document.getElementById('downloadAnchorElem');\n        dlAnchorElem.setAttribute(\"href\", dataStr);\n        dlAnchorElem.setAttribute(\"download\", \"data.json\");\n        dlAnchorElem.click();\n    }\n\n    function filterElem(e) {\n        if (!widgetRef.current) {\n            return;\n        }\n\n        const childNodes = widgetRef.current.childNodes;\n\n        if (e.target.value === '') { //no search query\n            childNodes.forEach((node) => {\n                node.style.display = 'block';\n            });\n        } else {\n            const re = new RegExp(`${e.target.value}`, 'g');\n            childNodes.forEach((node) => {\n                if (node.classList.value.search(re) !== -1) {\n                    node.style.display = 'block';\n                } else {\n                    node.style.display = 'none';\n                }\n            })\n        }\n    }\n\n\n    function callAPI(e) {\n        e.preventDefault();\n        const city = citySearchRef.current.value;\n        let promise = getWeather(city);\n        promise.then((result, error) => {\n            if (error) {\n                throw new Error();\n            }\n            const widget = makeWidget(result, widgetRef);\n            setWeather(widget);\n        });\n    }\n\n    return (\n        <section>\n            <nav>\n                Nav goes here\n            </nav>\n            <form onSubmit={(e) => callAPI(e)}>\n                <label for='citysearch'></label>\n                <input ref={citySearchRef} type='text' id='citysearch' name='citysearch' placeholder=\"Enter a City to Search\" />\n                <button>Submit</button>\n            </form>\n            {weather}\n            <form onChange={(e) => filterElem(e)} onSubmit={(e) => printElement(e)}>\n                <input type='text' placeholder={`Type to filter, submit to save`} />\n                <button>Submit</button>\n                <a href='/' id=\"downloadAnchorElem\" style={{ 'display': 'none' }}>{''}</a>\n            </form>\n        </section>\n    )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}