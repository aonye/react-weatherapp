{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { getWeather } from './weather';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const input = document.querySelector('#search');\n  const submitSearch = document.querySelector('#search + button');\n  const checked = document.getElementById('checkbox');\n  const temptoggle = document.querySelector('.temptoggle');\n  let currentObjRef;\n  const [x, setX] = useState();\n\n  function callAPI(input) {\n    let promise = getWeather(input);\n    promise.then((result, error) => {\n      if (error) {\n        throw new Error();\n      } // appendValues(result);\n      // toggleForm();\n      // toggleWidget();\n      // currentObjRef = result;\n\n\n      console.log(result);\n    });\n  }\n\n  function tempToggleHand() {// appendValues(currentObjRef);\n  }\n\n  function xBtnEventHand(event) {// event.target.checked = true;\n    // resetTempToggle();\n    // toggleForm();\n    // toggleWidget();\n  }\n\n  function submitHand(event) {\n    event.preventDefault(); //prevent page from refreshing\n\n    callAPI(input.value);\n    input.value = '';\n  }\n\n  temptoggle.addEventListener('click', tempToggleHand);\n  submitSearch.addEventListener('click', submitHand);\n  checked.addEventListener('change', xBtnEventHand);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Main, \"OH55v5n2AqGRZBuldwJrBTTjUt8=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/react-weatherapp/src/components/mainview.js"],"names":["useState","getWeather","Main","input","document","querySelector","submitSearch","checked","getElementById","temptoggle","currentObjRef","x","setX","callAPI","promise","then","result","error","Error","console","log","tempToggleHand","xBtnEventHand","event","submitHand","preventDefault","value","addEventListener"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,UAAT,QAA2B,WAA3B;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAd;AACA,QAAMC,YAAY,GAAGF,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAArB;AACA,QAAME,OAAO,GAAGH,QAAQ,CAACI,cAAT,CAAwB,UAAxB,CAAhB;AACA,QAAMC,UAAU,GAAGL,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAnB;AACA,MAAIK,aAAJ;AAEA,QAAM,CAACC,CAAD,EAAIC,IAAJ,IAAYZ,QAAQ,EAA1B;;AAGA,WAASa,OAAT,CAAiBV,KAAjB,EAAwB;AACpB,QAAIW,OAAO,GAAGb,UAAU,CAACE,KAAD,CAAxB;AACAW,IAAAA,OAAO,CAACC,IAAR,CAAa,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC5B,UAAIA,KAAJ,EAAW;AACP,cAAM,IAAIC,KAAJ,EAAN;AACH,OAH2B,CAI5B;AACA;AACA;AACA;;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACH,KATD;AAUH;;AAGD,WAASK,cAAT,GAA0B,CACtB;AACH;;AAED,WAASC,aAAT,CAAuBC,KAAvB,EAA8B,CAC1B;AACA;AACA;AACA;AACH;;AAED,WAASC,UAAT,CAAoBD,KAApB,EAA2B;AACvBA,IAAAA,KAAK,CAACE,cAAN,GADuB,CACC;;AACxBZ,IAAAA,OAAO,CAACV,KAAK,CAACuB,KAAP,CAAP;AACAvB,IAAAA,KAAK,CAACuB,KAAN,GAAc,EAAd;AACH;;AAEDjB,EAAAA,UAAU,CAACkB,gBAAX,CAA4B,OAA5B,EAAqCN,cAArC;AACAf,EAAAA,YAAY,CAACqB,gBAAb,CAA8B,OAA9B,EAAuCH,UAAvC;AACAjB,EAAAA,OAAO,CAACoB,gBAAR,CAAyB,QAAzB,EAAmCL,aAAnC;AAEA,sBACI,qCADJ;AAKH,CAnDD;;GAAMpB,I;;KAAAA,I;AAqDN,eAAeA,IAAf","sourcesContent":["import { useState } from 'react'\nimport { getWeather } from './weather';\n\nconst Main = () => {\n    const input = document.querySelector('#search');\n    const submitSearch = document.querySelector('#search + button');\n    const checked = document.getElementById('checkbox');\n    const temptoggle = document.querySelector('.temptoggle');\n    let currentObjRef;\n\n    const [x, setX] = useState();\n\n\n    function callAPI(input) {\n        let promise = getWeather(input);\n        promise.then((result, error) => {\n            if (error) {\n                throw new Error();\n            }\n            // appendValues(result);\n            // toggleForm();\n            // toggleWidget();\n            // currentObjRef = result;\n            console.log(result);\n        });\n    }\n\n\n    function tempToggleHand() {\n        // appendValues(currentObjRef);\n    }\n\n    function xBtnEventHand(event) {\n        // event.target.checked = true;\n        // resetTempToggle();\n        // toggleForm();\n        // toggleWidget();\n    }\n\n    function submitHand(event) {\n        event.preventDefault(); //prevent page from refreshing\n        callAPI(input.value);\n        input.value = '';\n    }\n\n    temptoggle.addEventListener('click', tempToggleHand);\n    submitSearch.addEventListener('click', submitHand);\n    checked.addEventListener('change', xBtnEventHand);\n\n    return (\n        <>\n\n        </>\n    )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}