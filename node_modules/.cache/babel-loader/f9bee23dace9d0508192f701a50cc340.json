{"ast":null,"code":"var _jsxFileName = \"/home/yeandyy/Documents/the_odin_project/react-weatherapp/src/components/mainview.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { getWeather } from './weather';\nimport { makeWidget } from './model';\nimport '../styles/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const input = document.querySelector('#search');\n  const submitSearch = document.querySelector('#search + button');\n  const checked = document.getElementById('checkbox');\n  const temptoggle = document.querySelector('.temptoggle');\n  let currentObjRef;\n  const citySearchRef = useRef();\n  const widgetRef = useRef();\n  const [weather, setWeather] = useState('');\n\n  function hideElement() {}\n\n  function filterElem(e) {\n    const childNodes = widgetRef.current.childNodes;\n\n    if (e.target.value === '') {\n      //no search query\n      childNodes.forEach(node => {\n        node.style.display = 'block';\n      });\n    } else {\n      childNodes.forEach(node => {\n        console.log(node.classList.value);\n        const regex = e.target.value;\n\n        if (node.classList.value === e.target.value) {\n          node.style.display = 'block';\n        } else {\n          node.style.display = 'none';\n        }\n      });\n    } //const childNodes = widgetRef.current.childNodes;\n\n  }\n\n  function callAPI(e) {\n    e.preventDefault();\n    const city = citySearchRef.current.value;\n    let promise = getWeather(city);\n    promise.then((result, error) => {\n      if (error) {\n        throw new Error();\n      } // appendValues(result);\n      // toggleForm();\n      // toggleWidget();\n      // currentObjRef = result;\n\n\n      console.log(result);\n      const widget = makeWidget(result, widgetRef);\n      setWeather(widget);\n    });\n  }\n\n  function tempToggleHand() {// appendValues(currentObjRef);\n  }\n\n  function xBtnEventHand(event) {// event.target.checked = true;\n    // resetTempToggle();\n    // toggleForm();\n    // toggleWidget();\n  }\n\n  function submitHand(event) {\n    event.preventDefault(); //prevent page from refreshing\n\n    callAPI(input.value);\n    input.value = '';\n  } //temptoggle.addEventListener('click', tempToggleHand);\n  //submitSearch.addEventListener('click', submitHand);\n  //checked.addEventListener('change', xBtnEventHand);\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: \"Nav goes here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => callAPI(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"citysearch\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: citySearchRef,\n        type: \"text\",\n        id: \"citysearch\",\n        name: \"citysearch\",\n        placeholder: \"Enter a City to Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), weather, /*#__PURE__*/_jsxDEV(\"form\", {\n      onChange: e => filterElem(e),\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Type title to filter, submit to save`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"/QjpvM8qT+989Yc1hmO9ujNfqjE=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/react-weatherapp/src/components/mainview.js"],"names":["useRef","useState","getWeather","makeWidget","Main","input","document","querySelector","submitSearch","checked","getElementById","temptoggle","currentObjRef","citySearchRef","widgetRef","weather","setWeather","hideElement","filterElem","e","childNodes","current","target","value","forEach","node","style","display","console","log","classList","regex","callAPI","preventDefault","city","promise","then","result","error","Error","widget","tempToggleHand","xBtnEventHand","event","submitHand"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react'\nimport { getWeather } from './weather';\nimport { makeWidget } from './model';\nimport '../styles/styles.css';\n\nconst Main = () => {\n    const input = document.querySelector('#search');\n    const submitSearch = document.querySelector('#search + button');\n    const checked = document.getElementById('checkbox');\n    const temptoggle = document.querySelector('.temptoggle');\n    let currentObjRef;\n\n    const citySearchRef = useRef();\n    const widgetRef = useRef();\n    const [weather, setWeather] = useState('');\n\n    function hideElement() {\n\n    }\n\n    function filterElem(e) {\n        const childNodes = widgetRef.current.childNodes;\n        if (e.target.value === '') { //no search query\n            childNodes.forEach((node) => {\n                node.style.display = 'block';\n            });\n        } else {\n            childNodes.forEach((node) => {\n                console.log(node.classList.value);\n                const regex = e.target.value;\n                if (node.classList.value === e.target.value) {\n                    node.style.display = 'block';\n                } else {\n                    node.style.display = 'none';\n                }\n            })\n        }\n        //const childNodes = widgetRef.current.childNodes;\n    }\n\n\n    function callAPI(e) {\n        e.preventDefault();\n        const city = citySearchRef.current.value;\n        let promise = getWeather(city);\n        promise.then((result, error) => {\n            if (error) {\n                throw new Error();\n            }\n            // appendValues(result);\n            // toggleForm();\n            // toggleWidget();\n            // currentObjRef = result;\n            console.log(result);\n            const widget = makeWidget(result, widgetRef);\n            setWeather(widget);\n        });\n    }\n\n\n    function tempToggleHand() {\n        // appendValues(currentObjRef);\n    }\n\n    function xBtnEventHand(event) {\n        // event.target.checked = true;\n        // resetTempToggle();\n        // toggleForm();\n        // toggleWidget();\n    }\n\n    function submitHand(event) {\n        event.preventDefault(); //prevent page from refreshing\n        callAPI(input.value);\n        input.value = '';\n    }\n\n    //temptoggle.addEventListener('click', tempToggleHand);\n    //submitSearch.addEventListener('click', submitHand);\n    //checked.addEventListener('change', xBtnEventHand);\n\n\n    return (\n        <section>\n            <nav>\n                Nav goes here\n            </nav>\n            <form onSubmit={(e) => callAPI(e)}>\n                <label for='citysearch'></label>\n                <input ref={citySearchRef} type='text' id='citysearch' name='citysearch' placeholder=\"Enter a City to Search\" />\n                <button>Submit</button>\n            </form>\n            {weather}\n            <form onChange={(e) => filterElem(e)}>\n                <input type='text' placeholder={`Type title to filter, submit to save`} />\n            </form>\n        </section>\n    )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}