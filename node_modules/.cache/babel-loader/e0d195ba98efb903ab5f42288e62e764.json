{"ast":null,"code":"import { getWeather } from './weather';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  const input = document.querySelector('#search');\n  const submitSearch = document.querySelector('#search + button');\n  const checked = document.getElementById('checkbox');\n  const temptoggle = document.querySelector('.temptoggle');\n  let currentObjRef;\n\n  function callAPI(input) {\n    let promise = getWeather(input);\n    promise.then((result, error) => {\n      if (error) {\n        throw new Error();\n      }\n\n      display.appendValues(result);\n      display.toggleForm();\n      display.toggleWidget();\n      currentObjRef = result;\n    });\n  }\n\n  function tempToggleHand() {\n    display.appendValues(currentObjRef);\n  }\n\n  function xBtnEventHand(event) {\n    event.target.checked = true;\n    display.resetTempToggle();\n    display.toggleForm();\n    display.toggleWidget();\n  }\n\n  function submitHand(event) {\n    event.preventDefault(); //prevent page from refreshing\n\n    callAPI(input.value);\n    input.value = '';\n  }\n\n  temptoggle.addEventListener('click', tempToggleHand);\n  submitSearch.addEventListener('click', submitHand);\n  checked.addEventListener('change', xBtnEventHand);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/react-weatherapp/src/components/mainview.js"],"names":["getWeather","Main","input","document","querySelector","submitSearch","checked","getElementById","temptoggle","currentObjRef","callAPI","promise","then","result","error","Error","display","appendValues","toggleForm","toggleWidget","tempToggleHand","xBtnEventHand","event","target","resetTempToggle","submitHand","preventDefault","value","addEventListener"],"mappings":"AAAA,SAASA,UAAT,QAA2B,WAA3B;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAd;AACA,QAAMC,YAAY,GAAGF,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAArB;AACA,QAAME,OAAO,GAAGH,QAAQ,CAACI,cAAT,CAAwB,UAAxB,CAAhB;AACA,QAAMC,UAAU,GAAGL,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAnB;AACA,MAAIK,aAAJ;;AAEA,WAASC,OAAT,CAAiBR,KAAjB,EAAwB;AACpB,QAAIS,OAAO,GAAGX,UAAU,CAACE,KAAD,CAAxB;AACAS,IAAAA,OAAO,CAACC,IAAR,CAAa,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC5B,UAAIA,KAAJ,EAAW;AACP,cAAM,IAAIC,KAAJ,EAAN;AACH;;AACDC,MAAAA,OAAO,CAACC,YAAR,CAAqBJ,MAArB;AACAG,MAAAA,OAAO,CAACE,UAAR;AACAF,MAAAA,OAAO,CAACG,YAAR;AACAV,MAAAA,aAAa,GAAGI,MAAhB;AACH,KARD;AASH;;AAGD,WAASO,cAAT,GAA0B;AACtBJ,IAAAA,OAAO,CAACC,YAAR,CAAqBR,aAArB;AACH;;AAED,WAASY,aAAT,CAAuBC,KAAvB,EAA8B;AAC1BA,IAAAA,KAAK,CAACC,MAAN,CAAajB,OAAb,GAAuB,IAAvB;AACAU,IAAAA,OAAO,CAACQ,eAAR;AACAR,IAAAA,OAAO,CAACE,UAAR;AACAF,IAAAA,OAAO,CAACG,YAAR;AACH;;AAED,WAASM,UAAT,CAAoBH,KAApB,EAA2B;AACvBA,IAAAA,KAAK,CAACI,cAAN,GADuB,CACC;;AACxBhB,IAAAA,OAAO,CAACR,KAAK,CAACyB,KAAP,CAAP;AACAzB,IAAAA,KAAK,CAACyB,KAAN,GAAc,EAAd;AACH;;AAEDnB,EAAAA,UAAU,CAACoB,gBAAX,CAA4B,OAA5B,EAAqCR,cAArC;AACAf,EAAAA,YAAY,CAACuB,gBAAb,CAA8B,OAA9B,EAAuCH,UAAvC;AACAnB,EAAAA,OAAO,CAACsB,gBAAR,CAAyB,QAAzB,EAAmCP,aAAnC;AAEA,sBACI,qCADJ;AAKH,CA/CD;;KAAMpB,I;AAiDN,eAAeA,IAAf","sourcesContent":["import { getWeather } from './weather';\n\nconst Main = () => {\n    const input = document.querySelector('#search');\n    const submitSearch = document.querySelector('#search + button');\n    const checked = document.getElementById('checkbox');\n    const temptoggle = document.querySelector('.temptoggle');\n    let currentObjRef;\n\n    function callAPI(input) {\n        let promise = getWeather(input);\n        promise.then((result, error) => {\n            if (error) {\n                throw new Error();\n            }\n            display.appendValues(result);\n            display.toggleForm();\n            display.toggleWidget();\n            currentObjRef = result;\n        });\n    }\n\n\n    function tempToggleHand() {\n        display.appendValues(currentObjRef);\n    }\n\n    function xBtnEventHand(event) {\n        event.target.checked = true;\n        display.resetTempToggle();\n        display.toggleForm();\n        display.toggleWidget();\n    }\n\n    function submitHand(event) {\n        event.preventDefault(); //prevent page from refreshing\n        callAPI(input.value);\n        input.value = '';\n    }\n\n    temptoggle.addEventListener('click', tempToggleHand);\n    submitSearch.addEventListener('click', submitHand);\n    checked.addEventListener('change', xBtnEventHand);\n\n    return (\n        <>\n\n        </>\n    )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}