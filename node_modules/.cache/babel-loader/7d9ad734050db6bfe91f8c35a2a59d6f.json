{"ast":null,"code":"import { getWeather, processWeather } from './weather';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  const input = document.querySelector('#search');\n  const submitSearch = document.querySelector('#search + button');\n  const checked = document.getElementById('checkbox');\n  const temptoggle = document.querySelector('.temptoggle');\n  let currentObjRef;\n\n  function callAPI(input) {\n    let promise = weather.getWeather(input);\n    promise.then(function (result) {\n      try {\n        if (!result) {\n          throw new Error();\n        }\n\n        display.appendValues(result);\n        display.toggleForm();\n        display.toggleWidget();\n        currentObjRef = result;\n      } catch (error) {}\n    });\n  }\n\n  function tempToggleHand() {\n    display.appendValues(currentObjRef);\n  }\n\n  function xBtnEventHand(event) {\n    event.target.checked = true;\n    display.resetTempToggle();\n    display.toggleForm();\n    display.toggleWidget();\n  }\n\n  function submitHand(event) {\n    event.preventDefault(); //prevent page from refreshing\n\n    callAPI(input.value);\n    input.value = '';\n  }\n\n  temptoggle.addEventListener('click', tempToggleHand);\n  submitSearch.addEventListener('click', submitHand);\n  checked.addEventListener('change', xBtnEventHand);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/home/yeandyy/Documents/the_odin_project/react-weatherapp/src/components/mainview.js"],"names":["getWeather","processWeather","Main","input","document","querySelector","submitSearch","checked","getElementById","temptoggle","currentObjRef","callAPI","promise","weather","then","result","Error","display","appendValues","toggleForm","toggleWidget","error","tempToggleHand","xBtnEventHand","event","target","resetTempToggle","submitHand","preventDefault","value","addEventListener"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,cAArB,QAA2C,WAA3C;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAd;AACA,QAAMC,YAAY,GAAGF,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAArB;AACA,QAAME,OAAO,GAAGH,QAAQ,CAACI,cAAT,CAAwB,UAAxB,CAAhB;AACA,QAAMC,UAAU,GAAGL,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAnB;AACA,MAAIK,aAAJ;;AAEA,WAASC,OAAT,CAAiBR,KAAjB,EAAwB;AACpB,QAAIS,OAAO,GAAGC,OAAO,CAACb,UAAR,CAAmBG,KAAnB,CAAd;AACAS,IAAAA,OAAO,CAACE,IAAR,CAAa,UAAUC,MAAV,EAAkB;AAC3B,UAAI;AACA,YAAI,CAACA,MAAL,EAAa;AACT,gBAAM,IAAIC,KAAJ,EAAN;AACH;;AACDC,QAAAA,OAAO,CAACC,YAAR,CAAqBH,MAArB;AACAE,QAAAA,OAAO,CAACE,UAAR;AACAF,QAAAA,OAAO,CAACG,YAAR;AACAV,QAAAA,aAAa,GAAGK,MAAhB;AACH,OARD,CAQE,OAAOM,KAAP,EAAc,CACf;AACJ,KAXD;AAYH;;AAED,WAASC,cAAT,GAA0B;AACtBL,IAAAA,OAAO,CAACC,YAAR,CAAqBR,aAArB;AACH;;AAED,WAASa,aAAT,CAAuBC,KAAvB,EAA8B;AAC1BA,IAAAA,KAAK,CAACC,MAAN,CAAalB,OAAb,GAAuB,IAAvB;AACAU,IAAAA,OAAO,CAACS,eAAR;AACAT,IAAAA,OAAO,CAACE,UAAR;AACAF,IAAAA,OAAO,CAACG,YAAR;AACH;;AAED,WAASO,UAAT,CAAoBH,KAApB,EAA2B;AACvBA,IAAAA,KAAK,CAACI,cAAN,GADuB,CACC;;AACxBjB,IAAAA,OAAO,CAACR,KAAK,CAAC0B,KAAP,CAAP;AACA1B,IAAAA,KAAK,CAAC0B,KAAN,GAAc,EAAd;AACH;;AAEDpB,EAAAA,UAAU,CAACqB,gBAAX,CAA4B,OAA5B,EAAqCR,cAArC;AACAhB,EAAAA,YAAY,CAACwB,gBAAb,CAA8B,OAA9B,EAAuCH,UAAvC;AACApB,EAAAA,OAAO,CAACuB,gBAAR,CAAyB,QAAzB,EAAmCP,aAAnC;AACA,sBACI,qCADJ;AAKH,CAhDD;;KAAMrB,I;AAkDN,eAAeA,IAAf","sourcesContent":["import { getWeather, processWeather } from './weather';\n\nconst Main = () => {\n    const input = document.querySelector('#search');\n    const submitSearch = document.querySelector('#search + button');\n    const checked = document.getElementById('checkbox');\n    const temptoggle = document.querySelector('.temptoggle');\n    let currentObjRef;\n\n    function callAPI(input) {\n        let promise = weather.getWeather(input);\n        promise.then(function (result) {\n            try {\n                if (!result) {\n                    throw new Error();\n                }\n                display.appendValues(result);\n                display.toggleForm();\n                display.toggleWidget();\n                currentObjRef = result;\n            } catch (error) {\n            }\n        });\n    }\n\n    function tempToggleHand() {\n        display.appendValues(currentObjRef);\n    }\n\n    function xBtnEventHand(event) {\n        event.target.checked = true;\n        display.resetTempToggle();\n        display.toggleForm();\n        display.toggleWidget();\n    }\n\n    function submitHand(event) {\n        event.preventDefault(); //prevent page from refreshing\n        callAPI(input.value);\n        input.value = '';\n    }\n\n    temptoggle.addEventListener('click', tempToggleHand);\n    submitSearch.addEventListener('click', submitHand);\n    checked.addEventListener('change', xBtnEventHand);\n    return (\n        <>\n\n        </>\n    )\n}\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}